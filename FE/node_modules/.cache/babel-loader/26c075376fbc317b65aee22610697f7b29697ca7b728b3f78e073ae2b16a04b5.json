{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SSAFY\\\\Desktop\\\\TIL\\\\test\\\\src\\\\components\\\\Alarm\\\\AlarmList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport IconButton from \"@mui/material/IconButton\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport RadioButtonUncheckedIcon from \"@mui/icons-material/RadioButtonUnchecked\";\nimport TaskAltIcon from \"@mui/icons-material/TaskAlt\";\nimport { Container } from \"@mui/material\";\nimport theme from \"../../styles/theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction generate(element, index, isRead) {\n  return /*#__PURE__*/React.cloneElement(element, {\n    key: index,\n    className: isRead ? \"alarm-read-item\" : \"alarm-item\"\n  });\n}\nexport default function InteractiveList() {\n  _s();\n  const [readList, setReadList] = React.useState([false, false]);\n  const readAlarm = index => {\n    setReadList(preReadList => {\n      const newReadList = [...preReadList];\n      newReadList[index] = !newReadList[index];\n      return newReadList;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC54C\\uB9BC\\uB9AC\\uC2A4\\uD2B8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        id: \"alarm-check-all\",\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: readList.every(item => item),\n          onChange: () => setReadList(preReadList => preReadList.map(() => true)),\n          disabled: readList.every(item => item)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this),\n        label: \"\\uBAA8\\uB450 \\uC77D\\uC74C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: readList.map((isRead, index) => generate( /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"alarm-time\",\n              children: alarmTimes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: \"end\",\n              onClick: () => readAlarm(index),\n              children: isRead ? null : /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true),\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: isRead ? /*#__PURE__*/_jsxDEV(TaskAltIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(RadioButtonUncheckedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"{alarmTypes}\",\n            secondary: \"{alarmTexts}\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), index, isRead))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(InteractiveList, \"B/25rZixmdciisjlynFPv24LorA=\");\n_c = InteractiveList;\nvar _c;\n$RefreshReg$(_c, \"InteractiveList\");","map":{"version":3,"names":["React","useState","List","ListItem","ListItemAvatar","ListItemText","IconButton","FormControlLabel","Checkbox","CloseIcon","RadioButtonUncheckedIcon","TaskAltIcon","Container","theme","jsxDEV","_jsxDEV","Fragment","_Fragment","generate","element","index","isRead","cloneElement","key","className","InteractiveList","_s","readList","setReadList","readAlarm","preReadList","newReadList","children","fileName","_jsxFileName","lineNumber","columnNumber","id","control","checked","every","item","onChange","map","disabled","label","secondaryAction","alarmTimes","edge","onClick","primary","secondary","_c","$RefreshReg$"],"sources":["C:/Users/SSAFY/Desktop/TIL/test/src/components/Alarm/AlarmList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\n\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport RadioButtonUncheckedIcon from \"@mui/icons-material/RadioButtonUnchecked\";\r\nimport TaskAltIcon from \"@mui/icons-material/TaskAlt\";\r\nimport { Container } from \"@mui/material\";\r\n\r\nimport theme from \"../../styles/theme\";\r\n\r\nfunction generate(element, index, isRead) {\r\n  return React.cloneElement(element, {\r\n    key: index,\r\n    className: isRead ? \"alarm-read-item\" : \"alarm-item\",\r\n  });\r\n}\r\n\r\nexport default function InteractiveList() {\r\n  const [readList, setReadList] = React.useState([false, false]);\r\n\r\n  const readAlarm = (index) => {\r\n    setReadList((preReadList) => {\r\n      const newReadList = [...preReadList];\r\n      newReadList[index] = !newReadList[index];\r\n      return newReadList;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <h2>알림리스트</h2>\r\n        <FormControlLabel\r\n          id=\"alarm-check-all\"\r\n          control={\r\n            <Checkbox\r\n              checked={readList.every((item) => item)}\r\n              onChange={() =>\r\n                setReadList((preReadList) => preReadList.map(() => true))\r\n              }\r\n              disabled={readList.every((item) => item)}\r\n            />\r\n          }\r\n          label=\"모두 읽음\"\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <List>\r\n          {readList.map((isRead, index) =>\r\n            generate(\r\n              <ListItem\r\n                secondaryAction={\r\n                  <>\r\n                    <span id=\"alarm-time\">{alarmTimes}</span>\r\n                    <IconButton edge=\"end\" onClick={() => readAlarm(index)}>\r\n                      {isRead ? null : <CloseIcon />}\r\n                    </IconButton>\r\n                  </>\r\n                }\r\n              >\r\n                <ListItemAvatar>\r\n                  {isRead ? <TaskAltIcon /> : <RadioButtonUncheckedIcon />}\r\n                </ListItemAvatar>\r\n                <ListItemText primary=\"{alarmTypes}\" secondary=\"{alarmTexts}\" />\r\n              </ListItem>,\r\n              index,\r\n              isRead\r\n            )\r\n          )}\r\n        </List>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}